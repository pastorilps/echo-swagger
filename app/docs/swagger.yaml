basePath: /
definitions:
  entity.Send_User:
    properties:
      email:
        example: test@test.com
        type: string
      id:
        type: integer
      name:
        example: User Name
        type: string
      newsletter:
        example: true
        type: boolean
      password:
        example: b3f8b6283fce62d85c5b6334c8ee9a611aed144c3d93d11ef2759f6baabdc3b0
        type: string
      picture:
        example: 1
        type: integer
    required:
    - email
    - name
    - newsletter
    - password
    - picture
    type: object
  entity.Users:
    properties:
      email:
        example: test@test.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: User Name
        type: string
      newsletter:
        example: true
        type: boolean
      password:
        example: b3f8b6283fce62d85c5b6334c8ee9a611aed144c3d93d11ef2759f6baabdc3b0
        type: string
      picture:
        example: 1
        type: integer
    type: object
host: localhost:3001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo Swagger API
  version: "1.0"
paths:
  /v1/users:
    get:
      consumes:
      - '*/*'
      description: Get all users list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Users'
      summary: Show all users.
      tags:
      - Get-All-Users
  /v1/users/{id}:
    get:
      consumes:
      - '*/*'
      description: Get user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Users'
      summary: Show an user.
      tags:
      - Get-User
  /v1/users/create:
    post:
      consumes:
      - application/json
      description: Create User.
      parameters:
      - description: The body to create a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/entity.Send_User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Users'
      summary: Create User.
      tags:
      - Create-User
  /v1/users/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User Data.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete User.
      tags:
      - Delete-User
  /v1/users/update/{id}:
    put:
      consumes:
      - application/json
      description: Update User Data.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: The body to update a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/entity.Send_User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Send_User'
      summary: Update User.
      tags:
      - Update-User
schemes:
- http
swagger: "2.0"
